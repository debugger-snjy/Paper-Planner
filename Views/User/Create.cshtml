@model PaperPlanner_Application.Models.User

@{
    ViewBag.Title = "Signup";
}

<head>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js" integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=" crossorigin="anonymous"></script>
</head>

@Html.Partial("_AlertMessages")

<h2>Create New User</h2>

@using (Html.BeginForm(""))
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(model => model.createdDate)
    @Html.HiddenFor(model => model.updatedDate)

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group mb-4">
            @Html.LabelFor(model => model.username, htmlAttributes: new { @class = "control-label form-label" })
            <span class="fw-bolder text-danger">*</span>
            <div class="col-md-10">
                @Html.EditorFor(model => model.username, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.username, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group mb-4">
            @Html.LabelFor(model => model.password_hash, htmlAttributes: new { @class = "control-label form-label" })
            <span class="fw-bolder text-danger">*</span>
            <div class="col-md-10">
                @Html.EditorFor(model => model.password_hash, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.password_hash, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group mb-4">
            @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label form-label" })
            <span class="fw-bolder text-danger">*</span>
            <div class="col-md-10">
                @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group mb-4">
            @Html.LabelFor(model => model.role, htmlAttributes: new { @class = "control-label form-label" })
            <span class="fw-bolder text-danger">*</span>
            <div class="col-md-10">
                @* No Need for the Edit Textbox *@
                @* @Html.EditorFor(model => model.role, new { htmlAttributes = new { @class = "form-control" } }) *@
                @* Using the HTML Helper for the Role *@
                CCC
                @Html.ValidationMessageFor(model => model.role, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group mb-4">
            @Html.LabelFor(model => model.fullname, htmlAttributes: new { @class = "control-label form-label" })
            <span class="fw-bolder text-danger">*</span>
            <div class="col-md-10">
                @Html.EditorFor(model => model.fullname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.fullname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group mb-4">
            @Html.LabelFor(model => model.age, htmlAttributes: new { @class = "control-label form-label" })
            <span class="fw-bolder text-danger">*</span>
            <div class="col-md-10">
                @Html.EditorFor(model => model.age, new { htmlAttributes = new { @class = "form-control", @min = "0" } })
                @Html.ValidationMessageFor(model => model.age, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group mb-4">
            @Html.LabelFor(model => model.gender, htmlAttributes: new { @class = "control-label form-label" })
            <span class="fw-bolder text-danger">*</span>
            <div class="col-md-10">
                @* No Need for the Edit Textbox *@
                @*@Html.EditorFor(model => model.gender, new { htmlAttributes = new { @class = "form-control" } })*@
                @* Using the HTML Helper for the Gender *@
                @Html.DropDownListFor(model => model.gender, new SelectList(new[] { "Male", "Female", "Others" }), "Select Gender", new { @class = "control-select form-select" })
                @Html.ValidationMessageFor(model => model.gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group mb-4">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create User" class="btn btn-success" />
                @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-warning" })
            </div>
        </div>
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

@Html.Partial("_AlertScript")
